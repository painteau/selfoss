{"mappings":"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","sources":["node_modules/@parcel/service-worker/service-worker.js","node_modules/@swc/helpers/src/_async_to_generator.mjs","node_modules/@parcel/service-worker/runtime-efd94bd859f2e2f7.js","node_modules/regenerator-runtime/runtime.js","selfoss-sw-offline.js"],"sourcesContent":["export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n","import {_register} from '@parcel/service-worker';\nconst manifest = [\"index.html\",\"icon-128x128.0cd416ec.png\",\"icon-32x32.3b40b320.png\",\"favicon.3abc0f4e.ico\",\"selfoss.webmanifest\",\"logo_big.a41ce105.png\",\"index.3653623a.css\",\"bg.28cb9002.gif\",\"logo.49d6af6a.png\",\"nav-mobile-logo.a804c2a5.png\",\"index.3f73fa7a.js\",\"index.1ce7a371.js\",\"opml.html\",\"opml.cd3284a8.js\",\"opml.1c191e1e.js\",\"hashpassword.html\",\"hashpassword.50f7404b.js\",\"hashpassword.a7abc686.js\"];\nconst version = \"e3d80e9d\";\n_register(manifest, version);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/* eslint-env worker, serviceworker */\n\nimport { manifest, version } from '@parcel/service-worker';\n\nasync function install() {\n    const cache = await caches.open(version);\n\n    const entriesToCache =\n        manifest\n            // These make no sense offline.\n            .filter((entry) => !entry.match(/^(hashpassword|opml)\\b/))\n            // We need to pass index.html through PHP to perform templating.\n            .map((entry) => entry === 'index.html' ? './' : entry);\n\n    await cache.addAll(entriesToCache);\n}\nself.addEventListener('install', (event) => event.waitUntil(install()));\n\n\nasync function activate() {\n    const keys = await caches.keys();\n    await Promise.all(\n        keys\n            .filter((key) => !(key === version || key === 'userCss' || key === 'userJs'))\n            .map((key) => caches.delete(key))\n    );\n}\nself.addEventListener('activate', (event) => event.waitUntil(activate()));\n\n\nself.addEventListener('fetch', function(event) {\n    if (event.request.method !== 'GET' || event.request.headers.get('X-Requested-With') === 'XMLHttpRequest') {\n        return;\n    }\n\n    event.respondWith(\n        caches.match(event.request)\n            .then((cachedResponse) => cachedResponse || fetch(event.request))\n            .catch(() => caches.match('./'))\n    );\n});\n\n\nself.addEventListener('message', function(messageEvent) {\n    if (messageEvent.data === 'skipWaiting') {\n        return self.skipWaiting();\n    }\n});\n"],"names":["$87f8e155af3cb5bc$export$e538f94cc8cf4db8","$87f8e155af3cb5bc$export$83d89fbfd8236492","$38abee7fac6e8afe$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","$38abee7fac6e8afe$export$2e2bcd8739ae039","fn","self","this","args","arguments","apply","err","undefined","$3583aa0116f084dd$var$runtime","exports","define","obj","Object","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","prototype","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","type","call","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","hasOwn","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","next","isNaN","length","i","Op","hasOwnProperty","$Symbol","Symbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","TypeError","resultName","nextLoc","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$3583aa0116f084dd$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$1cbfb640e438e6cc$var$_install","$parcel$interopDefault","_callee","cache","entriesToCache","caches","open","_ctx","filter","match","map","addAll","$1cbfb640e438e6cc$var$_activate","all","delete","addEventListener","event","waitUntil","$1cbfb640e438e6cc$var$install","$1cbfb640e438e6cc$var$activate","request","headers","get","respondWith","cachedResponse","fetch","messageEvent","data","skipWaiting"],"version":3,"file":"selfoss-sw-offline.js.map"}